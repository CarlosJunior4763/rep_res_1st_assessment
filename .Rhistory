head(card)
head(cars)
cars <- matrix(c(1,3,4,6,7,8,12,34,), c(89,23,45,12,67,89,))
cars <- matrix(c(1,3,4,6,7,8,12,34), c(89,23,45,12,67,89))
cars <- matrix(c(1,3,4,6,7,8,12,34), c(89,23,12,36,45,12,67,89))
cars <- matrix(c(1,3,4,6,7,8,12,34))
cars
cars <- cbind(cars, c(89,23,12,36,45,12,67,89))
cars
columnnames(cars) <- c('speed', 'dist')
colnames(cars) <- c('speed', 'dist')
cars
qplot(speed, dist, data=cars) + geom_smooth()
source('~/.active-rstudio-document', echo=TRUE)
install.packages("knitr")
library(stringr)
library(httr)
library(lubridate)
library(rJava)
library(xlsx)
library(XML)
library(jsonlite)
library(RMySQL)
library(plyr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(reshape2)
library(jpeg)
install.packages(c("MiKTex", "pandoc"))
install.packages("latex2exp")
tempfile()
work <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",work)
tempfile()
unzip(work)
unlink(work)
ls()
file.exists
file.exists()
rm(list=ls())
if(!file.exists("getdata-projectfiles-UCI HAR Dataset.zip")) {
work <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",work)
unzip(work)
unlink(work)
}
ls()
str(work)
file.exists()
file.exists(work)
## get data
steps  <- read.csv('activity.csv')
## examine data
summary(steps)
nrow(steps)
head(steps)
tail(steps)
str(steps)
## coerse to data format
steps$date <- as.Date(as.charstepser(steps$date, format ="%Y/%m/%d"))
## extract NA´s
step <- subset(act, !is.na(steps))
(file.exists('activity.csv'))
(!file.exists('activity.csv'))
## extract NA´s steps
actc <- subset(act, !is.na(steps))
## 1
steps_taken <- aggregate(steps ~ date, actc, sum)
hist(steps_taken$steps,
main = paste("Total Steps Each Day"),
col="blue", xlab="Number of Steps")
## limpa work area
rm(list=ls())
if(!file.exists('activity.csv')) {
work <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",work)
unzip(work)
unlink(work)
}
## get data
act  <- read.csv('activity.csv')
## examine data
summary(act)
nrow(act)
head(act)
tail(act)
str(act)
## coerse to data format
act$date <- as.Date(as.character(act$date, format ="%Y/%m/%d"))
## extract NA´s steps
actc <- subset(act, !is.na(steps))
## 1
steps_taken <- aggregate(steps ~ date, actc, sum)
hist(steps_taken$steps,
main = paste("Total Steps Each Day"),
col="blue", xlab="Number of Steps")
hist(steps_taken$steps,
main = paste("Total Steps / Day"),
col=3, xlab="No. Steps")
rmean <- mean(steps_taken$steps)
rmedian <- median(steps_taken$steps)
rmean
rmedian
steps_by_interval <- aggregate(steps ~ interval, actc, mean)
head(steps_by_interval)
actc
head(actc)
## 3
steps_inter <- aggregate(steps ~ interval, actc, mean)
plot(steps_inter$interval,
steps_inter$steps, type="l",
xlab="Interval", ylab="Number of Steps",
main="Average Number of Steps per Day by Interval")
## 4
max_interval <- steps_inter[which.max(steps_inter$steps),1]
## 5 - uses the original file with NAs
incomplete <- sum(!complete.cases(act))
imputed_data <- transform(act, steps = ifelse(is.na(act$steps),
steps_inter$steps[match(actc$interval,
steps_inter$interval)], actc$steps))
plot(steps_inter$interval,
steps_inter$steps, type="l",
xlab="Interval", ylab="No. Steps",
main="Average Steps /  Day / Interval")
max_interval <- steps_inter[which.max(steps_inter$steps),1]
max_interval
## 4
inter_max <- steps_inter[which.max(steps_inter$steps),1]
## 5 - uses the original file with NAs
no_complete  <- sum(!complete.cases(act))
complete_data <- transform(act, steps = ifelse(is.na(act$steps),
steps_inter$steps[match(actc$interval,
steps_inter$interval)], actc$steps))
complete_data[as.character(complete_data$date) == "2015-09-20", 1] <- 0
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=4, xlab="No Steps")
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=2, xlab="No Steps")
#Create Histogram to show difference.
hist(steps_date$steps,
main = paste(" Steps / Day"),
col="red", xlab="No Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col="red", xlab="No Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=2, xlab="No Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col="red", xlab="No Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
tail(act)
head(act)
complete_data[as.character(complete_data$date) == "2012-10-01", 1] <- 0
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=2, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col="red", xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
head(act)
head(complete_data)
## 5 - uses the original file with NAs
no_complete   <- sum(!complete.cases(act))
complete_data <- transform(act, steps = ifelse(is.na(act$steps),
steps_inter$steps[match(actc$interval,
steps_inter$interval)], actc$steps))
complete_data[as.character(complete_data$date) == "2012-10-01", 1] <- 0
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=2, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col="red", xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
## limpa work area
rm(list=ls())
if(!file.exists('activity.csv')) {
work <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",work)
unzip(work)
unlink(work)
}
## get data
act  <- read.csv('activity.csv')
## examine data
summary(act)
nrow(act)
head(act)
tail(act)
str(act)
## coerse to data format
act$date <- as.Date(as.character(act$date, format ="%Y/%m/%d"))
## extract NA´s steps
actc <- subset(act, !is.na(steps))
nrow(act)
nrow(actc)
## 1
steps_date <- aggregate(steps ~ date, actc, sum)
hist(steps_date$steps,
main = paste("Total Steps / Day"),
col=3, xlab="# Steps")
## 2
rmean <- mean(steps_date$steps)
rmedian <- median(steps_date$steps)
## 3
steps_inter <- aggregate(steps ~ interval, actc, mean)
plot(steps_inter$interval,
steps_inter$steps, type="l",
xlab="Interval", ylab="# Steps",
main="Average Steps /  Day / Interval")
## 4
inter_max <- steps_inter[which.max(steps_inter$steps),1]
## 5 - uses the original file with NAs
no_complete   <- sum(!complete.cases(act))
complete_data <- transform(act, steps = ifelse(is.na(act$steps),
steps_inter$steps[match(act$interval,
steps_inter$interval)], act$steps))
complete_data[as.character(complete_data$date) == "2012-10-01", 1] <- 0
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=2, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col="red", xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=c(2, 3), xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(2, 3), lwd=10)
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=4, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=2, xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(2, 3), lwd=10)
## Calculate new mean and median for imputed data.
rmean.i <- mean(steps_date_i$steps)
rmedian.i <- median(steps_date_i$steps)
## Calculate total difference.
total_diff <- sum(steps_date_i$steps) - sum(steps_date$steps)
total_diff
## Created a plot to compare and contrast number of steps between
## the week and weekend. There is a higher peak earlier on weekdays,
## and more overall activity on weekends.
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday")
complete_data$dow = as.factor(ifelse(is.element(weekdays(as.Date(complete_data$date)),weekdays),
"Weekday", "Weekend"))
steps_inter_i <- aggregate(steps ~ interval + dow, complete_data, mean)
library(lattice)
xyplot(steps_inter_i$steps ~ steps_inter_i$interval|steps_inter_i$dow,
main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="l")
xyplot(steps_inter_i$steps ~ steps_inter_i$interval|steps_inter_i$dow,
main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="2")
xyplot(steps_inter_i$steps ~ steps_inter_i$interval|steps_inter_i$dow,
main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="l")
xyplot(steps_inter_i$steps ~ steps_inter_i$interval|steps_inter_i$dow,
main="Average Steps per Day by Interval",xlab="Interval", ylab="Steps",layout=c(1,2), type="1")
weekdays <- c("Monday", "Tuesday", "Wednesday", "Thursday",
"Friday")
complete_data$dow = as.factor(ifelse(is.element(weekdays(as.Date(complete_data$date)),weekdays),
"Weekday", "Weekend"))
steps_inter_i <- aggregate(steps ~ interval + dow, complete_data, mean)
head(steps_inter_i)
top(steps_inter_i)
head(steps_inter_i)
head(steps_inter_i, 20)
tmpLT <- as.POSIXlt(act$date, format = "%Y-%m-%d")
tmpWeekDays <- tmpLT$wday
tmpWeekDays[tmpWeekDays == 0] = 0
tmpWeekDays[tmpWeekDays == 6] = 0
tmpWeekDays[tmpWeekDays != 0] = 1
tmpWeekDaysFactor <- factor(tmpWeekDays, levels = c(0, 1))
# Add the factor variable to the data
act$WD <- tmpWeekDaysFactor
# Calculate the mean
stepsMeanPerWeekday <- tapply(act$steps, list(act$interval, act$WD), mean,
na.rm = T)
par(mfrow = c(2, 1))
# Display the 2 plots
with(act, {
par(mai = c(0, 1, 1, 0))
plot(stepsMeanPerWeekday[, 1], type = "l", main = ("Steps vs. Interval"),
xaxt = "n", ylab = "Week ends")
title = ("# of Steps v.s. Interval")
par(mai = c(1, 1, 0, 0))
plot(stepsMeanPerWeekday[, 2], type = "l", xlab = "Interval", ylab = "Week days")
}
)
par(mfrow = c(2, 1))
# Display the 2 plots
with(act, {
par(mai = c(0, 1, 1, 0))
plot(stepsMeanPerWeekday[, 1], type = "l",
main = ("Steps vs. Interval"),
xaxt = "n", ylab = "Week ends")
title = ("# of Steps v.s. Interval")
par(mai = c(1, 1, 0, 0))
plot(stepsMeanPerWeekday[, 2],
type = "l", xlab = "Interval", ylab = "Week days")})
with(act, {
par(mai = c(0, 1, 1, 0))
plot(stepsMeanPerWeekday[, 1], type = "l",
main = ("Steps X Interval"),
xaxt = "n", ylab = "Week ends")
title = ("# of Steps v.s. Interval")
par(mai = c(1, 1, 0, 0))
plot(stepsMeanPerWeekday[, 2], type = "l",
xlab = "Interval",
ylab = "Week days")})
# Create a factor variable with two levels (weekday, weekend-day)
workLT <- as.POSIXlt(act$date, format = "%Y-%m-%d")
workWeekDays <- workLT$wday
workWeekDays[workWeekDays == 0] = 0
workWeekDays[workWeekDays == 6] = 0
workWeekDays[workWeekDays != 0] = 1
workWeekDaysFactor <- factor(workWeekDays, levels = c(0, 1))
# Add the factor variable to the data
act$WD <- workWeekDaysFactor
# Calculate the mean
##
# Create a factor variable with two levels (weekday, weekend-day)
workLT <- as.POSIXlt(act$date, format = "%Y-%m-%d")
workWD <- workLT$wday
workWD[workWD == 0] = 0
workWD[workWD == 6] = 0
workWD[workWD != 0] = 1
workWDFactor <- factor(workWD, levels = c(0, 1))
# Add the factor variable to the data
act$WD <- workWDFactor
# Calculate the mean
stepsWD <- tapply(act$steps, list(act$interval, act$WD), mean,
na.rm = T)
par(mfrow = c(2, 1))
# Display the 2 plots
with(act, {
par(mai = c(0, 1, 1, 0))
plot(stepsWD[, 1], type = "l",
main = ("Steps X Interval"),
xaxt = "n", ylab = "Week ends")
title = ("# of Steps v.s. Interval")
par(mai = c(1, 1, 0, 0))
plot(stepsWD[, 2], type = "l",
xlab = "Interval",
ylab = "Week days")})
## 5 - uses the original file with NAs
no_complete   <- sum(!complete.cases(act))
complete_data <- transform(act, steps = ifelse(is.na(act$steps),
steps_inter$steps[match(act$interval,
steps_inter$interval)], act$steps))
complete_data[as.character(complete_data$date) == "2012-10-01", 1] <- 0
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=4, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=2, xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(2, 4), lwd=10)
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
par(mfrow = c(1, 1))
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=4, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=2, xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(2, 4), lwd=10)
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
par(mfrow = c(1, 1))
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=4, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=2, xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
par(mfrow = c(1, 1))
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=2, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=4, xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(4, 2), lwd=10)
## get data
act  <- read.csv('activity.csv')
## examine data
summary(act)
nrow(act)
head(act)
tail(act)
str(act)
## coerse to data format
act$date <- as.Date(as.character(act$date, format ="%Y/%m/%d"))
## extract NA´s steps
actc <- subset(act, !is.na(steps))
## 1
steps_date <- aggregate(steps ~ date, actc, sum)
hist(steps_date$steps,
main = paste("Total Steps / Day"),
col=3, xlab="# Steps")
## 2
rmean <- mean(steps_date$steps)
rmedian <- median(steps_date$steps)
## 3
steps_inter <- aggregate(steps ~ interval, actc, mean)
plot(steps_inter$interval,
steps_inter$steps, type="l",
xlab="Interval", ylab="# Steps",
main="Average Steps /  Day / Interval")
## 4
inter_max <- steps_inter[which.max(steps_inter$steps),1]
## 5 - uses the original file with NAs
no_complete   <- sum(!complete.cases(act))
complete_data <- transform(act, steps = ifelse(is.na(act$steps),
steps_inter$steps[match(act$interval,
steps_inter$interval)], act$steps))
complete_data[as.character(complete_data$date) == "2012-10-01", 1] <- 0
## 6
steps_date_i <- aggregate(steps ~ date, complete_data, sum)
par(mfrow = c(1, 1))
hist(steps_date_i$steps,
main = paste("Steps / Day"),
col=1, xlab="# Steps")
#Create Histogram to show difference.
hist(steps_date_i$steps,
main = paste(" Steps / Day"),
col=2, xlab="# Steps", add=T)
legend("topright", c("Complete", "No_Complete"), col=c(3, 4), lwd=10)
rm(list=ls()) # clean work area
if(!file.exists('activity.csv')) {  ## get file
work <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip",work)
unzip(work)
unlink(work)}
act  <- read.csv('activity.csv') ## get data
ls()
act$date <- as.Date(as.character(act$date, format ="%Y/%m/%d")) ## coerse to data format
actc <- subset(act, !is.na(steps))  ## extract NA´s steps
steps_date <- aggregate(steps ~ date, actc, sum)
hist(steps_date$steps,
main = paste("Total Steps / Day"),
col=3, xlab="# Steps")
steps_date <- aggregate(steps ~ date, actc, sum)
hist(steps_date$steps,
main = paste("Total Steps / Day"),
col=4, xlab="# Steps")
ls()
setwd("C:\GIT\rep_res_1st_assessment")
suppressWarnings(suppressMessages(library(stringr)))
suppressWarnings(suppressMessages(library(stringi)))
suppressWarnings(suppressMessages(library(httr)))
suppressWarnings(suppressMessages(library(data.table)))
suppressWarnings(suppressMessages(library(xtable)))
suppressWarnings(suppressMessages(library(lubridate)))
suppressWarnings(suppressMessages(library(xlsx)))
suppressWarnings(suppressMessages(library(plyr)))
suppressWarnings(suppressMessages(library(dplyr)))
suppressWarnings(suppressMessages(library(tidyr)))
suppressWarnings(suppressMessages(library(ggplot2)))
suppressWarnings(suppressMessages(library(reshape2)))
suppressWarnings(suppressMessages(library(jpeg)))
suppressWarnings(suppressMessages(library(knitr)))
suppressWarnings(suppressMessages(library(markdown)))
suppressWarnings(suppressMessages(library(latex2exp)))
suppressWarnings(suppressMessages(library(doParallel)))
## limpa work area
rm(list=ls())
getwd()
setwd("C:/GIT/rep_res_1st_assessment")
getwd()
## elimina mensagens
options(warn =-1)
getOption('warn')
